[34m[1mLogs will be synced with wandb.
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
tensor([[0.0000, 0.0000, 0.7782, 0.0000],
        [0.0056, 0.0055, 0.6981, 0.0781]], device='cuda:0')
*** AttributeError: 'Episode' object has no attribute 'a'
tensor([8.5864], device='cuda:0')
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
tensor([[0.0000, 0.0000, 0.7782, 0.0000],
        [0.0056, 0.0055, 0.6981, 0.0781],
        [0.0142, 0.0127, 0.6955, 0.1125]], device='cuda:0')
tensor([8.5864, 8.5977], device='cuda:0')
False
*** AttributeError: 'Episode' object has no attribute '_'
*** AttributeError: 'Episode' object has no attribute '_'
tensor([8.5864, 8.5977], device='cuda:0')
tensor([[0.0000, 0.0000, 0.7782, 0.0000],
        [0.0056, 0.0055, 0.6981, 0.0781],
        [0.0142, 0.0127, 0.6955, 0.1125]], device='cuda:0')
False
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
tensor([[ 0.0000,  0.0000,  0.7782,  0.0000],
        [ 0.0056,  0.0055,  0.6981,  0.0781],
        [ 0.0142,  0.0127,  0.6955,  0.1125],
        [ 0.0189,  0.0167,  0.6954,  0.0619],
        [ 0.0276,  0.0239,  0.6947,  0.1135],
        [ 0.0325,  0.0280,  0.6926,  0.0630],
        [ 0.0321,  0.0277,  0.6928, -0.0049],
        [ 0.0309,  0.0267,  0.6925, -0.0159],
        [ 0.0294,  0.0254,  0.6932, -0.0197],
        [ 0.0333,  0.0286,  0.6915,  0.0505]], device='cuda:0')
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
tensor([[ 0.0000,  0.0000,  0.7782,  0.0000],
        [ 0.0056,  0.0055,  0.6981,  0.0781],
        [ 0.0142,  0.0127,  0.6955,  0.1125],
        [ 0.0189,  0.0167,  0.6954,  0.0619],
        [ 0.0276,  0.0239,  0.6947,  0.1135],
        [ 0.0325,  0.0280,  0.6926,  0.0630],
        [ 0.0321,  0.0277,  0.6928, -0.0049],
        [ 0.0309,  0.0267,  0.6925, -0.0159],
        [ 0.0294,  0.0254,  0.6932, -0.0197],
        [ 0.0333,  0.0286,  0.6915,  0.0505],
        [ 0.0328,  0.0283,  0.6917, -0.0057],
        [ 0.0289,  0.0251,  0.6919, -0.0503],
        [ 0.0269,  0.0234,  0.6924, -0.0265],
        [ 0.0236,  0.0206,  0.6919, -0.0433],
        [ 0.0187,  0.0165,  0.6917, -0.0638],
        [ 0.0178,  0.0158,  0.6919, -0.0114],
        [ 0.0158,  0.0142,  0.6919, -0.0257]], device='cuda:0')
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
> /home/jeongtae/RLMPPI/src/train.py(61)train()
-> while not episode.done:
Traceback (most recent call last):
  File "train.py", line 110, in <module>
    train(parse_cfg(Path().cwd() / __CONFIG__))
  File "train.py", line 61, in train
    while not episode.done:
  File "/home/jeongtae/RLMPPI/src/algorithm/helper.py", line 242, in __add__
    self.add(episode)
  File "/home/jeongtae/RLMPPI/src/algorithm/helper.py", line 246, in add
    self._s[self.idx:self.idx+self.cfg.episode_length] = episode.s[:-1] if self.cfg.modality == 'state' else episode.s[:-1, -3:]
RuntimeError: The expanded size of the tensor (500) must match the existing size (22) at non-singleton dimension 0.  Target sizes: [500, 4].  Tensor sizes: [22, 4]